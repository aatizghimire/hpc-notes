{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to High Performance Computing","text":""},{"location":"#introduction","title":"Introduction","text":"<p>High Performance Computing, is maximum utilization of resource in an computer system. Here, we try to  divide task/ job into multiple CPUs/GPUs in parallel (concurrent) ways. I expected readers, that they understand basic computer architecture and basic working of Operating System.</p> <p>Prequisite: None</p> <p>This website is personal notes for teaching High Performance Computing and has been compiled from multiple sources.</p>"},{"location":"#topics-covered","title":"Topics Covered","text":"<ul> <li>Revision of C Programming Language</li> <li>Pointers</li> <li>Dynamic Memory Allocation</li> <li>PThreads</li> <li>Mutex</li> <li>Semaphores</li> <li>Parallel Programming</li> <li>OpenMP</li> <li>GP GPUs</li> <li>CUDA</li> <li>Image Filters</li> <li>GPU Architecture and Programming</li> </ul>"},{"location":"c-program/Introduction-to-C/","title":"Introduction to C","text":""},{"location":"c-program/Introduction-to-C/#welcome","title":"Welcome","text":""},{"location":"c-program/Running-C-Program/","title":"Running C Program","text":"<p>Using C Language, is best for using hardware, since it is mid-level programming language, which is relatively fast and also used for managing our own memory. We can also use fortan, but i found it diffcult to implement, but there are great resource for that. I also tried to include C++ codes examples.</p>"},{"location":"c-program/Running-C-Program/#installing-gcc-and-nvcc-compiler-for-c-program","title":"Installing GCC and NVCC Compiler for C Program","text":"<p>For Multi-threading and OpenMP, we need to use GCC Compiler and for CUDA code to be compiled we need NVCC Compiler.</p>"}]}